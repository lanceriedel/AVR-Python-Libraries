{
    "$schema": "schema.json",
    "messages": [

        {
            "topic": "avr/pcm/stepper/move",
            "docs": [
                "move stepper with dir, steps"
            ],
            "payload": [
                {
                    "key": "steps",
                    "type": "int",
                    "docs": [
                        "The number of steps"
                    ]
                },
                {
                    "key": "direction",
                    "type": "Literal[\"U\", \"D\",\"L\", \"R\"]",
                    "docs": [
                        "U = up D = down L = left R = right."
                    ]
                }
            ]
        },
        // #region pcm
        {
            "topic": "avr/pcm/set_base_color",
            "docs": [
                "This sets the color of the LED strip on the PCC"
            ],
            "payload": [
                {
                    "key": "wrgb",
                    "type": "Tuple[int, int, int, int]",
                    "docs": [
                        "A list of 4 `int`s between 0 and 255 to set the base color of the LEDs. This is in order of White, Red, Green, Blue. Example: [0, 0, 255, 0] would be Green."
                    ]
                }
            ]
        },
        {
            "topic": "avr/pcm/set_temp_color",
            "docs": [
                "This sets the color of the LED strip on the PCC temporarily"
            ],
            "payload": [
                {
                    "key": "wrgb",
                    "type": "Tuple[int, int, int, int]",
                    "docs": [
                        "A list of 4 `int`s between 0 and 255 to set the base color of the LEDs. This is in order of White, Red, Green, Blue. Example: [0, 0, 255, 0] would be Green."
                    ]
                },
                {
                    "key": "time",
                    "type": "float",
                    "docs": [
                        "Optional `float` for the number of seconds the color should be set for. Default is 0.5."
                    ]
                }
            ]
        },
        {
            "topic": "avr/pcm/fire_laser",
            "docs": [
                "Fires the laser for a 0.25 sec pulse. Has a cooldown of 0.5 sec."
            ],
            "payload": []
        },
        {
            "topic": "avr/pcm/set_laser_on",
            "docs": [
                "Turns on laser (in blip mode - 0.1 second on every 0.5. sec)"
            ],
            "payload": []
        },
        {
            "topic": "avr/pcm/set_laser_off",
            "docs": [
                "Turns off laser (laser off from blip mode - but doesn't prevent fire_laser)"
            ],
            "payload": []
        },
        {
            "topic": "avr/pcm/set_servo_open_close",
            "docs": [
                "This opens or closes a specific servo."
            ],
            "payload": [
                {
                    "key": "servo",
                    "type": "int",
                    "docs": [
                        "ID of the servo to open or close as an `int`. This is 0-indexed."
                    ]
                },
                {
                    "key": "action",
                    "type": "Literal[\"open\", \"close\"]",
                    "docs": [
                        "Either the literal string \"open\" or \"close\"."
                    ]
                }
            ]
        },
        {
            "topic": "avr/pcm/set_servo_min",
            "docs": [
                "This sets the minimum pulse width of a specific servo."
            ],
            "payload": [
                {
                    "key": "servo",
                    "type": "int",
                    "docs": [
                        "ID of the servo to set the minimum pulse width as an `int`. This is 0-indexed."
                    ]
                },
                {
                    "key": "min_pulse",
                    "type": "int",
                    "docs": [
                        "A `int` between 0 and 1000."
                    ]
                }
            ]
        },
        {
            "topic": "avr/pcm/set_servo_max",
            "docs": [
                "This sets the maximum pulse width of a specific servo."
            ],
            "payload": [
                {
                    "key": "servo",
                    "type": "int",
                    "docs": [
                        "ID of the servo to set the maximum pulse width as an `int`. This is 0-indexed."
                    ]
                },
                {
                    "key": "max_pulse",
                    "type": "int",
                    "docs": [
                        "A `int` between 0 and 1000."
                    ]
                }
            ]
        },
        {
            "topic": "avr/pcm/set_servo_pct",
            "docs": [
                "This sets the percentage of a specific servo. 0 is closed, and 100 is open."
            ],
            "payload": [
                {
                    "key": "servo",
                    "type": "int",
                    "docs": [
                        "ID of the servo to set the percent as an `int`. This is 0-indexed."
                    ]
                },
                {
                    "key": "percent",
                    "type": "int",
                    "docs": [
                        "A `int` between 0 and 100."
                    ]
                }
            ]
        },
        {
            "topic": "avr/pcm/set_servo_abs",
            "docs": [
                "This sets the absolute position of a specific servo. SERVOMIN 150 is closed, and SERVOMAX 425 is open. We need to send a High and Low byte due to limitations of the API"
            ],
            "payload": [
                {
                    "key": "servo",
                    "type": "int",
                    "docs": [
                        "ID of the servo to set the percent as an `int`. This is 0-indexed."
                    ]
                },
                {
                    "key": "absolute",
                    "type": "int",
                    "docs": [
                        "Absolute position between SERVOMIN 150 and SERVOMAX 425"
                    ]
                }
            ]
        },
        // {
        //     "topic": "avr/pcm/reset",
        //     "docs": ["This resets the PCC"],
        //     "payload": []
        // },
        // #endregion
        // #region fcm
        {
            "topic": "avr/fcm/hil_gps_stats",
            "docs": [
                "This reports statistics on the HIL GPS data that is fed into the flight controller."
            ],
            "payload": [
                {
                    "key": "num_frames",
                    "type": "int",
                    "docs": [
                        "This is the number of messages that have been sent to the flight controller since the software has started."
                    ]
                }
            ]
        },
        {
            "topic": "avr/fcm/events",
            "docs": [
                "This reports events from the flight controller such as flight mode changes."
            ],
            "payload": [
                {
                    "key": "name",
                    "type": "str",
                    "docs": [
                        "The name of the event."
                    ]
                },
                {
                    "key": "payload",
                    "type": "str",
                    "docs": [
                        "The payload of the event."
                    ]
                }
            ]
        },
        {
            "topic": "avr/fcm/battery",
            "docs": [
                "This reports battery information from the flight controller."
            ],
            "payload": [
                {
                    "key": "voltage",
                    "type": "float",
                    "docs": [
                        "Battery voltage"
                    ]
                },
                {
                    "key": "soc",
                    "type": "float",
                    "docs": [
                        "State of charge (0 - 100)"
                    ]
                }
            ]
        },
        {
            "topic": "avr/fcm/status",
            "docs": [
                "This reports general status of the flight controller."
            ],
            "payload": [
                {
                    "key": "armed",
                    "type": "bool",
                    "docs": [
                        "Boolean of if the drone is currently armed"
                    ]
                },
                {
                    "key": "mode",
                    "type": "str",
                    "docs": [
                        "Current flight mode, which is one of the following:\n    - 'UNKNOWN'\n    - 'READY'\n    - 'TAKEOFF'\n    - 'HOLD'\n    - 'MISSION'\n    - 'RETURN_TO_LAUNCH'\n    - 'LAND'\n    - 'OFFBOARD'\n    - 'FOLLOW_ME'\n    - 'MANUAL'\n    - 'ALTCTL'\n    - 'POSCTL'\n    - 'ACRO'\n    - 'STABILIZED'\n    - 'RATTITUDE'"
                    ]
                }
            ]
        },
        {
            "topic": "avr/fcm/location/local",
            "docs": [
                "This reports the current position of the drone in local coordinates from the flight controller."
            ],
            "payload": [
                {
                    "key": "dX",
                    "type": "float",
                    "docs": [
                        "X position in a local North/East/Down coordinate system in meters"
                    ]
                },
                {
                    "key": "dY",
                    "type": "float",
                    "docs": [
                        "Y position in a local North/East/Down coordinate system in meters"
                    ]
                },
                {
                    "key": "dZ",
                    "type": "float",
                    "docs": [
                        "Z position in a local North/East/Down coordinate system in meters"
                    ]
                }
            ]
        },
        {
            "topic": "avr/fcm/location/global",
            "docs": [
                "This reports the current position of the drone in global coordinates from the flight controller."
            ],
            "payload": [
                {
                    "key": "lat",
                    "type": "float",
                    "docs": [
                        "Latitude in degrees"
                    ]
                },
                {
                    "key": "lon",
                    "type": "float",
                    "docs": [
                        "Longitude in degrees"
                    ]
                },
                {
                    "key": "alt",
                    "type": "float",
                    "docs": [
                        "Altitude relative to takeoff altitude in meters"
                    ]
                },
                {
                    "key": "hdg",
                    "type": "float",
                    "docs": [
                        "Heading in degrees."
                    ]
                }
            ]
        },
        {
            "topic": "avr/fcm/location/home",
            "docs": [
                "This reports the current position of the drone's home position in global coordinates."
            ],
            "payload": [
                {
                    "key": "lat",
                    "type": "float",
                    "docs": [
                        "Latitude in degrees of the home position"
                    ]
                },
                {
                    "key": "lon",
                    "type": "float",
                    "docs": [
                        "Longitude in degrees of the home position"
                    ]
                },
                {
                    "key": "alt",
                    "type": "float",
                    "docs": [
                        "Altitude relative to the home position in meters"
                    ]
                }
            ]
        },
        {
            "topic": "avr/fcm/attitude/euler",
            "docs": [
                "This reports the current attitude of the drone from the flight controller."
            ],
            "payload": [
                {
                    "key": "roll",
                    "type": "float",
                    "docs": [
                        "Roll in degrees"
                    ]
                },
                {
                    "key": "pitch",
                    "type": "float",
                    "docs": [
                        "Pitch in degrees"
                    ]
                },
                {
                    "key": "yaw",
                    "type": "float",
                    "docs": [
                        "Yaw in degrees"
                    ]
                }
            ]
        },
        {
            "topic": "avr/fcm/velocity",
            "docs": [
                "This reports the current velocity vectors of the drone from the flight controller."
            ],
            "payload": [
                {
                    "key": "vX",
                    "type": "float",
                    "docs": [
                        "X velocity in a local North/East/Down coordinate system in meters per second"
                    ]
                },
                {
                    "key": "vY",
                    "type": "float",
                    "docs": [
                        "Y velocity in a local North/East/Down coordinate system in meters per second"
                    ]
                },
                {
                    "key": "vZ",
                    "type": "float",
                    "docs": [
                        "Z velocity in a local North/East/Down coordinate system in meters per second"
                    ]
                }
            ]
        },
        {
            "topic": "avr/fcm/gps_info",
            "docs": [
                "This reports the current status of the flight controller's GPS connection."
            ],
            "payload": [
                {
                    "key": "num_satellites",
                    "type": "int",
                    "docs": [
                        "Number of visible satellites in use. HIL GPS will appear as 13."
                    ]
                },
                {
                    "key": "fix_type",
                    "type": "str",
                    "docs": [
                        "GPS fix type"
                    ]
                }
            ]
        },
        // #endregion
        // #region fusion
        {
            "topic": "avr/fusion/position/ned",
            "docs": [
                "This reports the computed position of the drone in local coordinates from our sensor fusion."
            ],
            "payload": [
                {
                    "key": "n",
                    "type": "float",
                    "docs": [
                        "X position in a local North/East/Down coordinate system in meters"
                    ]
                },
                {
                    "key": "e",
                    "type": "float",
                    "docs": [
                        "Y position in a local North/East/Down coordinate system in meters"
                    ]
                },
                {
                    "key": "d",
                    "type": "float",
                    "docs": [
                        "Z position in a local North/East/Down coordinate system in meters"
                    ]
                }
            ]
        },
        {
            "topic": "avr/fusion/velocity/ned",
            "docs": [
                "This reports the computed velocity vectors of the drone from our sensor fusion."
            ],
            "payload": [
                {
                    "key": "Vn",
                    "type": "float",
                    "docs": [
                        "X velocity in a local North/East/Down coordinate system in meters per second"
                    ]
                },
                {
                    "key": "Ve",
                    "type": "float",
                    "docs": [
                        "Y velocity in a local North/East/Down coordinate system in meters per second"
                    ]
                },
                {
                    "key": "Vd",
                    "type": "float",
                    "docs": [
                        "Z velocity in a local North/East/Down coordinate system in meters per second"
                    ]
                }
            ]
        },
        {
            "topic": "avr/fusion/geo",
            "docs": [
                "This reports the computed position of the drone in global coordinates from our sensor fusion."
            ],
            "payload": [
                {
                    "key": "lat",
                    "type": "float",
                    "docs": [
                        "Latitude in degrees"
                    ]
                },
                {
                    "key": "lon",
                    "type": "float",
                    "docs": [
                        "Longitude in degrees"
                    ]
                },
                {
                    "key": "alt",
                    "type": "float",
                    "docs": [
                        "Altitude relative to takeoff altitude in meters"
                    ]
                }
            ]
        },
        {
            "topic": "avr/fusion/groundspeed",
            "docs": [
                "This reports the computed groundspeed of the drone from our sensor fusion."
            ],
            "payload": [
                {
                    "key": "groundspeed",
                    "type": "float",
                    "docs": [
                        "Groundspeed of the drone in meters per second. This is a normal vector of the N and E velocities."
                    ]
                }
            ]
        },
        {
            "topic": "avr/fusion/course",
            "docs": [
                "This reports the computed course of the drone from our sensor fusion."
            ],
            "payload": [
                {
                    "key": "course",
                    "type": "float",
                    "docs": [
                        "Course in degrees"
                    ]
                }
            ]
        },
        {
            "topic": "avr/fusion/climbrate",
            "docs": [
                "This reports the computed rate of climb of the drone from our sensor fusion."
            ],
            "payload": [
                {
                    "key": "climb_rate_fps",
                    "type": "float",
                    "docs": [
                        "Rate of climb in feet per second"
                    ]
                }
            ]
        },
        {
            "topic": "avr/fusion/attitude/quat",
            "docs": [
                "This reports the computed attitude of the drone from our sensor fusion."
            ],
            "payload": [
                {
                    "key": "w",
                    "type": "float",
                    "docs": [
                        "Quaternion w value"
                    ]
                },
                {
                    "key": "x",
                    "type": "float",
                    "docs": [
                        "Quaternion x value"
                    ]
                },
                {
                    "key": "y",
                    "type": "float",
                    "docs": [
                        "Quaternion y value"
                    ]
                },
                {
                    "key": "z",
                    "type": "float",
                    "docs": [
                        "Quaternion z value"
                    ]
                }
            ]
        },
        {
            "topic": "avr/fusion/attitude/euler",
            "docs": [
                "This reports the computed attitude of the drone from our sensor fusion."
            ],
            "payload": [
                {
                    "key": "psi",
                    "type": "float",
                    "docs": [
                        "Roll in radians"
                    ]
                },
                {
                    "key": "theta",
                    "type": "float",
                    "docs": [
                        "Pitch in radians"
                    ]
                },
                {
                    "key": "phi",
                    "type": "float",
                    "docs": [
                        "Yaw in radians"
                    ]
                }
            ]
        },
        {
            "topic": "avr/fusion/attitude/heading",
            "docs": [
                "This reports the computed heading of the drone from our sensor fusion."
            ],
            "payload": [
                {
                    "key": "heading",
                    "type": "float",
                    "docs": [
                        "Heading in degrees"
                    ]
                }
            ]
        },
        {
            "topic": "avr/fusion/hil_gps",
            "docs": [
                "This is the raw data that will get converted to a MAVLink message and sent to the flight controller for HIL GPS. <https://mavlink.io/en/messages/common.html#HIL_GPS>"
            ],
            "payload": [
                {
                    "key": "time_usec",
                    "type": "int",
                    "docs": [
                        "UNIX epoch timestamp in microseconds"
                    ]
                },
                {
                    "key": "fix_type",
                    "type": "int",
                    "docs": [
                        "0-1: no fix, 2: 2D fix, 3: 3D fix."
                    ]
                },
                {
                    "key": "lat",
                    "type": "int",
                    "docs": [
                        "WGS84 Latitude * 10000000"
                    ]
                },
                {
                    "key": "lon",
                    "type": "int",
                    "docs": [
                        "WGS84 Longitude * 10000000"
                    ]
                },
                {
                    "key": "alt",
                    "type": "int",
                    "docs": [
                        "Altitude from sea level in mm. Positive for up."
                    ]
                },
                {
                    "key": "eph",
                    "type": "int",
                    "docs": [
                        "GPS HDOP horizontal dilution of position"
                    ]
                },
                {
                    "key": "epv",
                    "type": "int",
                    "docs": [
                        "GPS VDOP vertical dilution of position"
                    ]
                },
                {
                    "key": "vel",
                    "type": "int",
                    "docs": [
                        "GPS ground speed in centimeters per second"
                    ]
                },
                {
                    "key": "vn",
                    "type": "int",
                    "docs": [
                        "GPS velocity in north direction in centimeters per second"
                    ]
                },
                {
                    "key": "ve",
                    "type": "int",
                    "docs": [
                        "GPS velocity in east direction in centimeters per second"
                    ]
                },
                {
                    "key": "vd",
                    "type": "int",
                    "docs": [
                        "GPS velocity in down direction in centimeters per second"
                    ]
                },
                {
                    "key": "cog",
                    "type": "int",
                    "docs": [
                        "Course over ground in degrees"
                    ]
                },
                {
                    "key": "satellites_visible",
                    "type": "int",
                    "docs": [
                        "Number of satellites visible. This is hardcoded to 13 for our HIL GPS."
                    ]
                },
                {
                    "key": "heading",
                    "type": "int",
                    "docs": [
                        "Custom heading field. This is the heading in degrees * 100."
                    ]
                }
            ]
        },
        // #endregion
        // #region vio
        {
            "topic": "avr/vio/resync",
            "docs": [
                "This reports significant position differences from the tracking camera, and detected AprilTags at known positions."
            ],
            "payload": [
                {
                    "key": "n",
                    "type": "float",
                    "docs": [
                        "X position difference in a local North/East/Down coordinate system in meters"
                    ]
                },
                {
                    "key": "e",
                    "type": "float",
                    "docs": [
                        "Y position difference in a local North/East/Down coordinate system in meters"
                    ]
                },
                {
                    "key": "d",
                    "type": "float",
                    "docs": [
                        "Z position difference in a local North/East/Down coordinate system in meters"
                    ]
                },
                {
                    "key": "heading",
                    "type": "float",
                    "docs": [
                        "Heading difference in degrees"
                    ]
                }
            ]
        },
        {
            "topic": "avr/vio/position/ned",
            "docs": [
                "This reports the measured position of the drone in local coordinates from the tracking camera."
            ],
            "payload": [
                {
                    "key": "n",
                    "type": "float",
                    "docs": [
                        "X position in a local North/East/Down coordinate system in meters"
                    ]
                },
                {
                    "key": "e",
                    "type": "float",
                    "docs": [
                        "Y position in a local North/East/Down coordinate system in meters"
                    ]
                },
                {
                    "key": "d",
                    "type": "float",
                    "docs": [
                        "Z position in a local North/East/Down coordinate system in meters"
                    ]
                }
            ]
        },
        {
            "topic": "avr/vio/velocity/ned",
            "docs": [
                "This reports the measued velocity vectors of the drone from the tracking camera."
            ],
            "payload": [
                {
                    "key": "n",
                    "type": "float",
                    "docs": [
                        "X velocity in a local North/East/Down coordinate system in meters per second"
                    ]
                },
                {
                    "key": "e",
                    "type": "float",
                    "docs": [
                        "Y velocity in a local North/East/Down coordinate system in meters per second"
                    ]
                },
                {
                    "key": "d",
                    "type": "float",
                    "docs": [
                        "Z velocity in a local North/East/Down coordinate system in meters per second"
                    ]
                }
            ]
        },
        {
            "topic": "avr/vio/orientation/eul",
            "docs": [
                "This reports the measued attitude of the drone from the tracking camera."
            ],
            "payload": [
                {
                    "key": "psi",
                    "type": "float",
                    "docs": [
                        "Roll in radians"
                    ]
                },
                {
                    "key": "theta",
                    "type": "float",
                    "docs": [
                        "Pitch in radians"
                    ]
                },
                {
                    "key": "phi",
                    "type": "float",
                    "docs": [
                        "Yaw in radians"
                    ]
                }
            ]
        },
        {
            "topic": "avr/vio/orientation/quat",
            "docs": [
                "This reports the measued attitude of the drone from the tracking camera."
            ],
            "payload": [
                {
                    "key": "w",
                    "type": "float",
                    "docs": [
                        "Quaternion w value"
                    ]
                },
                {
                    "key": "x",
                    "type": "float",
                    "docs": [
                        "Quaternion x value"
                    ]
                },
                {
                    "key": "y",
                    "type": "float",
                    "docs": [
                        "Quaternion y value"
                    ]
                },
                {
                    "key": "z",
                    "type": "float",
                    "docs": [
                        "Quaternion z value"
                    ]
                }
            ]
        },
        {
            "topic": "avr/vio/heading",
            "docs": [
                "This reports the measued heading of the drone from the tracking camera."
            ],
            "payload": [
                {
                    "key": "degrees",
                    "type": "float",
                    "docs": [
                        "Heading in degrees"
                    ]
                }
            ]
        },
        {
            "topic": "avr/vio/confidence",
            "docs": [
                "This reports the tracking camera's confidence"
            ],
            "payload": [
                {
                    "key": "tracker",
                    "type": "float",
                    "docs": [
                        "Number between 0 and 100 of tracking confidence"
                    ]
                }
            ]
        },
        // #endregion
        // #region apriltag
        {
            "topic": "avr/apriltags/selected",
            "docs": [
                "This topic publishes its best candidate for position feedback"
            ],
            "payload": [
                {
                    "key": "tag_id",
                    "type": "int",
                    "docs": [
                        "The id of the tag"
                    ]
                },
                {
                    "key": "pos",
                    "docs": [
                        "The position of the vehicle in world frame in centimeters"
                    ],
                    "type": [
                        {
                            "key": "n",
                            "type": "float",
                            "docs": [
                                "The +north position of the vehicle relative to the world origin in world frame"
                            ]
                        },
                        {
                            "key": "e",
                            "type": "float",
                            "docs": [
                                "The +east position of the vehicle relative to the world origin in world frame"
                            ]
                        },
                        {
                            "key": "d",
                            "type": "float",
                            "docs": [
                                "The +down position of the vehicle relative to the world origin in world frame"
                            ]
                        }
                    ]
                },
                {
                    "key": "heading",
                    "type": "float"
                }
            ]
        },
        {
            "topic": "avr/apriltags/raw",
            "docs": [
                "This topic publishes the raw AprilTag data"
            ],
            "payload": [
                {
                    "key": "tags",
                    "list": true,
                    "type": [
                        {
                            "key": "id",
                            "type": "int",
                            "docs": [
                                "The ID of the AprilTag"
                            ]
                        },
                        {
                            "key": "pos",
                            "type": [
                                {
                                    "key": "x",
                                    "type": "float",
                                    "docs": [
                                        "The position in meters of the camera relative to the AprilTag's X frame"
                                    ]
                                },
                                {
                                    "key": "y",
                                    "type": "float",
                                    "docs": [
                                        "The position in meters of the camera relative to the AprilTag's Y frame"
                                    ]
                                },
                                {
                                    "key": "z",
                                    "type": "float",
                                    "docs": [
                                        "The position in meters of the camera relative to the AprilTag's Z frame"
                                    ]
                                }
                            ]
                        },
                        {
                            "key": "rotation",
                            "type": "Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]",
                            "docs": [
                                "The 3x3 rotation matrix"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "topic": "avr/apriltags/visible",
            "docs": [
                "This topic publishes the transformed AprilTag data"
            ],
            "payload": [
                {
                    "key": "tags",
                    "list": true,
                    "type": [
                        {
                            "key": "id",
                            "type": "int",
                            "docs": [
                                "The ID of the AprilTag"
                            ]
                        },
                        {
                            "key": "horizontal_dist",
                            "type": "float",
                            "docs": [
                                "The horizontal scalar distance from vehicle to AprilTag, in centimeters"
                            ]
                        },
                        {
                            "key": "vertical_dist",
                            "type": "float",
                            "docs": [
                                "The vertical scalar distance from vehicle to AprilTag, in centimeters"
                            ]
                        },
                        {
                            "key": "angle_to_tag",
                            "type": "float",
                            "docs": [
                                "The angle formed by the vector pointing from the vehicles body to the AprilTag in world frame relative to world-north"
                            ]
                        },
                        {
                            "key": "heading",
                            "type": "float",
                            "docs": [
                                "The heading of the vehicle in world frame"
                            ]
                        },
                        {
                            "key": "pos_rel",
                            "docs": [
                                "The relative position of the vehicle to the tag in world frame in centimeters"
                            ],
                            "type": [
                                {
                                    "key": "x",
                                    "type": "float",
                                    "docs": [
                                        "The x (+north/-south) position of the vehicle relative to the AprilTag in world frame"
                                    ]
                                },
                                {
                                    "key": "y",
                                    "type": "float",
                                    "docs": [
                                        "The y (+east/-west) position of the vehicle relative to the AprilTag in world frame"
                                    ]
                                },
                                {
                                    "key": "z",
                                    "type": "float",
                                    "docs": [
                                        "The z (+down/-up) position of the vehicle relative to the AprilTag in world frame"
                                    ]
                                }
                            ]
                        },
                        {
                            "key": "pos_world",
                            "docs": [
                                "The position of the vehicle in world frame in centimeters (if the tag has no truth data, this will not be present in the output)"
                            ],
                            "type": [
                                {
                                    "key": "x",
                                    "type": "Optional[float]",
                                    "docs": [
                                        "The x position of the vehicle relative to the world origin (this is the ship) in world frame (for reference the mountain is **north** of the beach)"
                                    ]
                                },
                                {
                                    "key": "y",
                                    "type": "Optional[float]",
                                    "docs": [
                                        "The y position of the vehicle relative to the world origin in world frame"
                                    ]
                                },
                                {
                                    "key": "z",
                                    "type": "Optional[float]",
                                    "docs": [
                                        "The z position of the vehicle relative to the world origin in world frame"
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "topic": "avr/apriltags/fps",
            "docs": [
                "This reports the framerate of AprilTag processing"
            ],
            "payload": [
                {
                    "key": "fps",
                    "type": "int",
                    "docs": [
                        "Number of frames of video data processed in the last second"
                    ]
                }
            ]
        },
        // #endregion
        // #region thermal
        {
            "topic": "avr/thermal/reading",
            "docs": [
                "This publishes data from the thermal camera"
            ],
            "payload": [
                {
                    "key": "data",
                    "type": "str",
                    "docs": [
                        "The raw data from the thermal camera are integer values from an 8x8 grid of pixels. This data is then converted into a bytearray and base64 encoded. Any example of how to unpack this data:",
                        "",
                        "```python",
                        "import base64",
                        "import json",
                        "",
                        "data = json.loads(payload)[\"data\"]",
                        "base64_decoded = data.encode(\"utf-8\")",
                        "as_bytes = base64.b64decode(base64_decoded)",
                        "pixel_ints = list(bytearray(as_bytes))",
                        "```"
                    ]
                }
            ]
        },
        // #endregion
        // #region status
        {
            "topic": "avr/status/light/pcm",
            "docs": [],
            "payload": []
        },
        {
            "topic": "avr/status/light/vio",
            "docs": [],
            "payload": []
        },
        {
            "topic": "avr/status/light/apriltags",
            "docs": [],
            "payload": []
        },
        {
            "topic": "avr/status/light/fcm",
            "docs": [],
            "payload": []
        },
        {
            "topic": "avr/status/light/thermal",
            "docs": [],
            "payload": []
        },
        // #endregion
        // #region autonomous
        {
            "topic": "avr/autonomous/enable",
            "docs": [
                "This enables or disables autonomous mode. This is not used by any Bell code, but available to students to."
            ],
            "payload": [
                {
                    "key": "enabled",
                    "type": "bool"
                }
            ]
        },
        {
            "topic": "avr/autonomous/building/drop",
            "docs": [
                "This enables or disables a building payload drop. This is not used by any Bell code, but available to students to listen to."
            ],
            "payload": [
                {
                    "key": "id",
                    "type": "int",
                    "docs": [
                        "0-index ID of the relevant building"
                    ]
                },
                {
                    "key": "enabled",
                    "type": "bool",
                    "docs": [
                        "Boolean of whether the building should have drop enabled"
                    ]
                }
            ]
        }
        // #endregion
    ]
}
